/*Crie um programa que declare uma estrutura (registro) para o cadastro de alunos.
(a) Deverao ser armazenados, para cada aluno: matr ˜ ´ıcula, sobrenome (apenas um) e
idade.
(b) Ao in´ıcio do programa, o usuario dever ´ a informar o n ´ umero de alunos que ser ´ ao˜
armazenados
(c) O programa devera alocar dinamicamente a quantidade necess ´ aria de mem ´ oria ´
para armazenar os registros dos alunos.
(d) O programa devera pedir ao usu ´ ario que entre com as informac¸ ´ oes dos alunos. ˜
(e) Ao final, mostrar os dados armazenados e liberar a memoria alocada*/

#include <stdio.h>
#include <stdlib.h>
#define TAM 50

typedef struct registro{
int matricula;
char nome[TAM];
int ano;
}registro;

int main(){
int qntd;
printf("\nInforme a quantidade de alunos:\n");
scanf("%d", &qntd);
registro* aluno = (registro*)malloc(qntd * sizeof(registro));
if(aluno == NULL){
printf("\nERRO.");
exit(1);
}
for(int i = 0; i < qntd; i++){
printf("\nInforme as informacoes do aluno [%d]\n", i+1);
printf("\nInforme a matricula do aluno:\n");
scanf("%d", &aluno[i].matricula);
getchar();
printf("\nInforme a idade do aluno:\n");
scanf("%d", &aluno[i].ano);
getchar();
printf("Nome e sobrenome:\n");
//fgets(aluno[i].nome, TAM, stdin);
scanf("%[^\n]s", aluno[i].nome);
getchar();


}

printf("\n-----------Informacoes-----------\n");
for(int i = 0; i < qntd; i++){
printf("--------------------------------------");
printf("\nAluno [%d]", i+1);
printf("\nNome: %s", aluno[i].nome);
printf("\nMatricula: %d", aluno[i].matricula);
printf("\nIdade: %d\n", aluno[i].ano);
printf("--------------------------------------");
}

return 0;
}
